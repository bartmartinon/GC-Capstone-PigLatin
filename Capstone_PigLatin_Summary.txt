Out of all the C# String methods available, I used the following:

Split():
Necessary to split the original sentence string into individual word strings to make it much easier to translate each word separately, especially since it also includes the punctuation to add back later.

Substring():
Also vital, since Pig Latin essentially has us split each word into two. It's much cleaner to split them into halves based on the first vowel's index than to rearrange them around as individual characters. All is then takes is to concatenate them with "+", alongside the appropriate suffix, punctuation, and capital letters.

ToUpper():
If there was a capital letter in the original word, ToUpper was used to make sure that the translated word also have a capital letter.

ToLower():
Mainly used to make sure that the IsAVowel method gets lowercase letters. Also to make sure that the original word's capital letter is made lowercase once the substrings are rearranged.

ToCharArray():
Handy for the Vowel Check Loop since we'd need to go through each char to know where to split the word into substrings.

Trim():
Mainly there for formatting. The translated sentence would have an extra whitespace at the end.

IsNullOrEmpty():
User input validation. But for this project, I decided to try something else for fun. If the user doesn't enter anything for the input, this would return true. So I decided to provide an example for the user to (hopefully) follow.

Equals():
Used for the continuation prompt at the end of the loop. Accepts only "y" and "Y" as yes answers.

First():
I didn't find all that much documentation on this one, so it might be old-school, but yes, First() apparently works and it returns the first character of a string. Used to change the case of the substrings' first letters' if the original word was capitalized.